CREATE TABLE Students (
    student_id INT PRIMARY KEY,
    name VARCHAR(100),
    distance_from_school FLOAT,
    house_type ENUM('Own', 'Rental')
);

CREATE TABLE Parents (
    parent_id INT PRIMARY KEY,
    student_id INT,
    working_status ENUM('Working', 'Not Working'),
    organization_type VARCHAR(100),
    relationship ENUM('Father', 'Mother'),
    FOREIGN KEY (student_id) REFERENCES Students(student_id)
);




-- Inserting into Students table
INSERT INTO Students (student_id, name, distance_from_school, house_type)
VALUES 
(1, 'John Doe', 5.3, 'Own'),
(2, 'Alice Smith', 7.1, 'Rental'),
(3, 'Bob Johnson', 3.5, 'Own'),
(4, 'Emma Brown', 6.2, 'Rental'),
(5, 'Michael Clark', 4.8, 'Own');

-- Inserting into Parents table
INSERT INTO Parents (parent_id, student_id, working_status, organization_type, relationship)
VALUES 
(101, 1, 'Working', 'Private', 'Father'),
(102, 1, 'Working', 'Government', 'Mother'),
(103, 2, 'Not Working', NULL, 'Father'),
(104, 2, 'Working', 'Private', 'Mother'),
(105, 3, 'Working', 'Government', 'Father'),
(106, 3, 'Not Working', NULL, 'Mother'),
(107, 4, 'Working', 'Private', 'Father'),
(108, 4, 'Working', 'Private', 'Mother'),
(109, 5, 'Not Working', NULL, 'Father'),
(110, 5, 'Not Working', NULL, 'Mother');





-- 3. Count of students whose one parent working and both parents working
SELECT 
    SUM(CASE WHEN parent_count = 1 THEN 1 ELSE 0 END) AS one_parent_working_count,
    SUM(CASE WHEN parent_count = 2 THEN 1 ELSE 0 END) AS both_parents_working_count
FROM (
    SELECT student_id, COUNT(*) AS parent_count
    FROM Parents
    GROUP BY student_id
) AS parent_counts;




-- 4. Count of students living in own house and rental
SELECT 
    SUM(CASE WHEN house_type = 'Own' THEN 1 ELSE 0 END) AS own_house_count,
    SUM(CASE WHEN house_type = 'Rental' THEN 1 ELSE 0 END) AS rental_house_count
FROM Students;



-- 6. Count of students whose father and mother type of organization is same
SELECT COUNT(*)
FROM (
    SELECT student_id
    FROM Parents
    GROUP BY student_id
    HAVING COUNT(DISTINCT organization_type) = 1
) AS same_organization_count;



-- 7. Count of students according to their distances from school
SELECT 
    FLOOR(distance_from_school) AS distance,
    COUNT(*) AS student_count
FROM Students
GROUP BY FLOOR(distance_from_school);




-- 8. Name of students whose mother is working and name of students whose father is working. List name if it is coming more than once.
SELECT name
FROM (
    SELECT s.name, COUNT(*) AS count
    FROM Students s
    JOIN Parents p ON s.student_id = p.student_id
    WHERE (p.relationship = 'Mother' AND p.working_status = 'Working')
        OR (p.relationship = 'Father' AND p.working_status = 'Working')
    GROUP BY s.name
    HAVING COUNT(DISTINCT p.relationship) > 1
) AS duplicate_names;




