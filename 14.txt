14. A temple where around 1000 pilgrims visit every day wants to keep following record.

1. Names, gender, phone numbers and state of the pilgrims.

2. Names of pilgrims visited more than 10 times in given period. 3. If a pilgrim is visiting 10th time in a month then give him a silver coin.

4. If a pilgrim is visiting 25th time in a year then give him gold coin.

5. Prasad is also distributed to pilgrims as 25 rs per laddu if requested.

6. Display number of pilgrims visiting per month and no. of laddus distributed.

7. Display count of male and female pilgrims visited in given period.

8. Display the revenue generated by selling laddus during specified period.

9. Display state wise count of pilgrims visited temple during specified period. 
10. Display count of silver and gold coins distributed in given period.


-- 1. Creating the Database
CREATE DATABASE Temple;
USE Temple;

-- 2. Creating Tables

-- Table: Pilgrim
CREATE TABLE Pilgrim (
    PilgrimID INT AUTO_INCREMENT PRIMARY KEY,
    Name VARCHAR(100),
    Gender ENUM('Male', 'Female'),
    PhoneNumber VARCHAR(15),
    State VARCHAR(100)
);

-- Table: Visit
CREATE TABLE Visit (
    VisitID INT AUTO_INCREMENT PRIMARY KEY,
    PilgrimID INT,
    VisitDate DATE,
    LaddusRequested INT,
    FOREIGN KEY (PilgrimID) REFERENCES Pilgrim(PilgrimID)
);

-- 3. Inserting Initial Data

-- Insert sample data into Pilgrim
INSERT INTO Pilgrim (Name, Gender, PhoneNumber, State) VALUES
('Alice', 'Female', '555-1234', 'California'),
('Bob', 'Male', '555-5678', 'Texas'),
('Charlie', 'Male', '555-8765', 'New York');

-- Insert sample data into Visit
INSERT INTO Visit (PilgrimID, VisitDate, LaddusRequested) VALUES
(1, '2023-05-01', 2),
(1, '2023-05-02', 3),
(2, '2023-05-01', 1),
(3, '2023-05-03', 4),
(1, '2023-05-03', 1),
(2, '2023-05-03', 2),
(3, '2023-05-04', 1);

-- 4. Queries for Specific Requirements

-- 4.1 Names, gender, phone numbers and state of the pilgrims
SELECT Name, Gender, PhoneNumber, State
FROM Pilgrim;

-- 4.2 Names of pilgrims visited more than 10 times in given period
SELECT p.Name
FROM Pilgrim p
JOIN Visit v ON p.PilgrimID = v.PilgrimID
WHERE v.VisitDate BETWEEN '2023-01-01' AND '2023-12-31'
GROUP BY p.Name
HAVING COUNT(v.VisitID) > 10;

-- 4.3 If a pilgrim is visiting 10th time in a month then give him a silver coin
SELECT p.Name
FROM Pilgrim p
JOIN Visit v ON p.PilgrimID = v.PilgrimID
WHERE MONTH(v.VisitDate) = 5 AND YEAR(v.VisitDate) = 2023
GROUP BY p.Name
HAVING COUNT(v.VisitID) = 10;

-- 4.4 If a pilgrim is visiting 25th time in a year then give him gold coin
SELECT p.Name
FROM Pilgrim p
JOIN Visit v ON p.PilgrimID = v.PilgrimID
WHERE YEAR(v.VisitDate) = 2023
GROUP BY p.Name
HAVING COUNT(v.VisitID) = 25;

-- 4.5 Prasad is also distributed to pilgrims as 25 rs per laddu if requested
-- Cost is calculated during revenue calculation

-- 4.6 Display number of pilgrims visiting per month and number of laddus distributed
SELECT MONTH(VisitDate) AS Month, COUNT(DISTINCT PilgrimID) AS PilgrimCount, SUM(LaddusRequested) AS LaddusDistributed
FROM Visit
GROUP BY MONTH(VisitDate);

-- 4.7 Display count of male and female pilgrims visited in given period
SELECT Gender, COUNT(DISTINCT p.PilgrimID) AS Count
FROM Pilgrim p
JOIN Visit v ON p.PilgrimID = v.PilgrimID
WHERE v.VisitDate BETWEEN '2023-01-01' AND '2023-12-31'
GROUP BY Gender;

-- 4.8 Display the revenue generated by selling laddus during specified period
SELECT SUM(LaddusRequested * 25) AS Revenue
FROM Visit
WHERE VisitDate BETWEEN '2023-01-01' AND '2023-12-31';

-- 4.9 Display state wise count of pilgrims visited temple during specified period
SELECT p.State, COUNT(DISTINCT p.PilgrimID) AS Count
FROM Pilgrim p
JOIN Visit v ON p.PilgrimID = v.PilgrimID
WHERE v.VisitDate BETWEEN '2023-01-01' AND '2023-12-31'
GROUP BY p.State;

-- 4.10 Display count of silver and gold coins distributed in given period
-- Silver Coins
SELECT COUNT(*) AS SilverCoins
FROM (
    SELECT p.PilgrimID
    FROM Pilgrim p
    JOIN Visit v ON p.PilgrimID = v.PilgrimID
    WHERE MONTH(v.VisitDate) = 5 AND YEAR(v.VisitDate) = 2023
    GROUP BY p.PilgrimID
    HAVING COUNT(v.VisitID) = 10
) AS Silver;

-- Gold Coins
SELECT COUNT(*) AS GoldCoins
FROM (
    SELECT p.PilgrimID
    FROM Pilgrim p
    JOIN Visit v ON p.PilgrimID = v.PilgrimID
    WHERE YEAR(v.VisitDate) = 2023
    GROUP BY p.PilgrimID
    HAVING COUNT(v.VisitID) = 25
) AS Gold;
